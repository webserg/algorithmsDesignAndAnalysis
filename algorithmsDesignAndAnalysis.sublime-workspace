{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"t",
				"temp"
			],
			[
				"tp",
				"tmp_idx"
			],
			[
				"l",
				"length"
			],
			[
				"N",
				"NoAnswer"
			],
			[
				"m",
				"match"
			],
			[
				"f",
				"first_answer"
			],
			[
				"h",
				"help"
			],
			[
				"let",
				"let"
			],
			[
				"U",
				"UnitP"
			],
			[
				"Const",
				"ConstructorP"
			],
			[
				"C",
				"ConstructorP"
			],
			[
				"Co",
				"Constructor"
			],
			[
				"all",
				"all_answers"
			],
			[
				"Un",
				"UnitP"
			],
			[
				"ch",
				"check_pat"
			],
			[
				"pa",
				"pattern_all_strings"
			],
			[
				"Tuple",
				"TupleP"
			],
			[
				"ma",
				"mapSome"
			],
			[
				"in",
				"incrementIt"
			],
			[
				"lo",
				"longest_string_helper"
			],
			[
				"s",
				"size"
			],
			[
				"p",
				"provided_test6"
			],
			[
				"lst_",
				"lst_cards"
			],
			[
				"g",
				"goal"
			],
			[
				"re",
				"remove_card_helper"
			],
			[
				"he",
				"held_cards"
			],
			[
				"ls",
				"lst_moves"
			],
			[
				"of",
				"officiate_help"
			],
			[
				"pr",
				"pr_score"
			],
			[
				"sum",
				"sum"
			],
			[
				"su",
				"sum_cards"
			],
			[
				"ca",
				"card_value"
			],
			[
				"lst",
				"lst_cards"
			],
			[
				"D",
				"Diamonds"
			],
			[
				"al",
				"all_same_color"
			],
			[
				"car",
				"card_color"
			],
			[
				"get",
				"get_substitutions2"
			],
			[
				"fu",
				"full_name"
			],
			[
				"u",
				"unzip3"
			],
			[
				"get_s",
				"get_subs_help"
			],
			[
				"T",
				"TestFailedException"
			],
			[
				"str",
				"str_lst"
			],
			[
				"le",
				"len_list"
			],
			[
				"sa",
				"same_string"
			],
			[
				"Ex",
				"ExprCaseVersion"
			],
			[
				"da",
				"days_list"
			],
			[
				"ol",
				"oldest_find"
			],
			[
				"mo",
				"month_range"
			],
			[
				"n",
				"number_in_mnth"
			],
			[
				"li",
				"listCheck"
			],
			[
				"o",
				"oneTwoThree"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "import org.junit.Assert;\nimport org.junit.Test;\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.nio.charset.Charset;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\n\n/**\n * User: webserg\n * Date: 12.02.13\n */\npublic class com.gmail.webserg.algorithmsAndAnalysis.v1.MergeSort {\n    private static int[] source;\n    private static long inversions;\n\n    private void writeIntArrayToFile(String filePath, int[] arr) {\n        Charset charset = Charset.forName(\"UTF-8\");\n        Path path = Paths.get(filePath);\n        try (BufferedWriter writer = Files.newBufferedWriter(path, charset)) {\n            for (int i = 0; i < arr.length; i++) {\n                writer.write(\"\" + arr[i], 0, (\"\" + arr[i]).length());\n                writer.newLine();\n            }\n            writer.flush();\n            writer.close();\n        } catch (IOException x) {\n            System.err.format(\"IOException: %s%n\", x);\n        }\n    }\n\n    private void writeLongToFile(String filePath, long longNumber) {\n        Charset charset = Charset.forName(\"UTF-8\");\n        Path path = Paths.get(filePath);\n        try (BufferedWriter writer = Files.newBufferedWriter(path, charset)) {\n            writer.write(\"\" + longNumber, 0, (\"\" + longNumber).length());\n\n            writer.flush();\n            writer.close();\n        } catch (IOException x) {\n            System.err.format(\"IOException: %s%n\", x);\n        }\n    }\n\n    private int[] readIntArrayToFile(String filePath, int arraySize) {\n        Charset charset = Charset.forName(\"UTF-8\");\n        Path path = Paths.get(filePath);\n        int result[] = new int[arraySize];\n        int idx = 0;\n        try (BufferedReader reader = Files.newBufferedReader(path, charset)) {\n            String line;\n            while ((line = reader.readLine()) != null) {\n                result[idx++] = Integer.parseInt(line);\n            }\n\n            reader.close();\n        } catch (IOException x) {\n            System.err.format(\"IOException: %s%n\", x);\n        }\n        return result;\n    }\n\n    @Test\n    public void testMergeSort() throws Exception {\n        System.out.println(\"start...\");\n        source = readIntArrayToFile(\"resource/IntegerArray.txt\", 100000);\n        mergeSort(source);\n        writeIntArrayToFile(\"resource/out.txt\", source);\n        writeLongToFile(\"resource/inversions.txt\", inversions);\n        System.out.println(\"inversions = \" + inversions);\n        Assert.assertEquals(2407905288L, inversions);\n    }\n\n    public void mergeSort(int[] s) throws Exception {\n        source = s;\n        if (source.length < 2)\n            return;\n        split(0, s.length - 1);\n\n    }\n\n    private static void split(final int first, final int last) {\n        if (first < last) {\n            int middle = (first + last) >>> 1;\n            split(first, middle);\n            if (first < last) split(middle + 1, last);\n            merge(first, middle, middle + 1, last);\n        }\n    }\n\n    private static void merge(int fl, int ll, int fr, int lr) {\n        int[] temp = new int[source.length];\n        int tmp_idx = fl;\n        int saveF = fl;\n        while (fl <= ll && fr <= lr) {\n            if (source[fl] < source[fr]) {\n                temp[tmp_idx] = source[fl];\n                fl++;\n            } else {\n                temp[tmp_idx] = source[fr];\n                fr++;\n                inversions += (ll + 1 - fl);\n            }\n            tmp_idx++;\n        }\n        while (fl <= ll) temp[tmp_idx++] = source[fl++];\n        while (fr <= lr) temp[tmp_idx++] = source[fr++];\n        System.arraycopy(temp, saveF, source, saveF, lr - saveF + 1);\n    }\n}\n",
			"file": "src/com.gmail.webserg.algorithmsAndAnalysis.v1.MergeSort.java",
			"file_size": 3755,
			"file_write_time": 130053425983550206,
			"settings":
			{
				"buffer_size": 3642,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/com.gmail.webserg.algorithmsAndAnalysis.v1.QuickSortComparisonsCount.java",
			"settings":
			{
				"buffer_size": 3781,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/devel/algorithmsDesignAndAnalysis/src/com.gmail.webserg.algorithmsAndAnalysis.v1.ShuffleArray.java",
		"/C/devel/sml/homework1.sml",
		"/C/devel/sml/mutable_ref_callback.sml",
		"/C/devel/sml/partial _application.sml",
		"/C/devel/sml/closure_idiom.sml",
		"/C/devel/sml/hw2provided.sml",
		"/C/devel/sml/hw3provided.txt",
		"/C/devel/sml/hw2providedTests.sml",
		"/C/devel/sml/currying_wrapup.sml",
		"/C/devel/sml/closures_and_other.sml",
		"/C/devel/sml/lexical_scope.sml",
		"/C/devel/sml/homeworkPeerAssesment1.sml",
		"/C/devel/sml/homeworkPeerAssesment3.sml",
		"/C/devel/sml/homeworkTest1.sml",
		"/C/devel/sml/tail_recursion.sml",
		"/C/devel/sml/first_class_func.sml",
		"/C/devel/sml/generalizing_prior_topics.sml",
		"/C/devel/sml/hw3provided.sml",
		"/C/devel/sml/anonym_func.sml",
		"/C/devel/sml/func_wrapping.sml",
		"/C/devel/sml/map_filter.sml",
		"/C/devel/sml/another_expr_exampl.sml",
		"/C/devel/sml/hw2provided.txt",
		"/C/devel/sml/hw2providedTests.txt",
		"/C/devel/sml/case_expr.sml",
		"/C/devel/sml/each_of_pattern_matching.sml",
		"/C/devel/sml/more_nested_patterns.sml",
		"/C/devel/sml/nested_patterns.sml",
		"/C/devel/sml/exception.sml",
		"/C/devel/sml/polymorphi_ types_ func.sml",
		"/C/devel/sml/type_interference.sml",
		"/C/devel/sml/synttic_sugar.sml",
		"/C/devel/sml/polymorphic_and_equality_types.sml",
		"/C/devel/sml/list_option_datatypes.sml",
		"/C/devel/sml/type_synonim.sml",
		"/C/devel/workspace/ScalaWork/src/com/google/webserg/scala/coursera/week4/ExprCaseVersion.scala",
		"/C/devel/sml/list.sml",
		"/C/devel/sml/list func.sml",
		"/C/devel/sml/polimorphic_datatypes.sml",
		"/C/devel/sml/homework1.txt",
		"/C/devel/sml/usefull_datatypes.sml",
		"/C/devel/sml/peer_homeworkTest1.sml",
		"/C/devel/sml/peer_homework1.sml",
		"/C/devel/sml/records.sml",
		"/C/devel/sml/tupels.sml",
		"/C/devel/sml/data_bindings.sml",
		"/C/devel/sml/options.sml",
		"/C/devel/sml/effitiance.sml",
		"/C/devel/sml/func_nested.sml",
		"/C/devel/sml/let_expr.sml",
		"/C/devel/sml/first.sml",
		"/C/devel/workspace/ScalaWork/src/com/google/webserg/scala/collections/UseLists.scala",
		"/C/devel/scala1/src/Hello.scala",
		"/C/Users/webserg/AppData/Roaming/Sublime Text 2/Packages/SublimeREPL/SublimeREPL.sublime-settings",
		"/C/Users/webserg/AppData/Roaming/Sublime Text 2/Packages/Default/Base File.sublime-settings",
		"/C/Program Files/Java/jdk1.7.0_01/src.zip"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"while",
			"                   ",
			"callback",
			"head",
			"all_same_color",
			"\"\n",
			"2",
			"1",
			"itt",
			" ",
			"int"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/com.gmail.webserg.algorithmsAndAnalysis.v1.MergeSort.java",
					"settings":
					{
						"buffer_size": 3642,
						"regions":
						{
						},
						"selection":
						[
							[
								259,
								259
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/com.gmail.webserg.algorithmsAndAnalysis.v1.QuickSortComparisonsCount.java",
					"settings":
					{
						"buffer_size": 3781,
						"regions":
						{
						},
						"selection":
						[
							[
								2735,
								2735
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1584.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 186.0,
	"status_bar_visible": true
}
